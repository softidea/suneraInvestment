package Admins;


import ClassFiles.DB;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Buwaneka
 */
public class NewJDialog extends javax.swing.JDialog {

    String path = "";

    /**
     * Creates new form NewJDialog
     */
    public NewJDialog(java.awt.Frame parent, boolean modal) {
        // super(parent, modal);
        setUndecorated(true);
        setOpacity(0f);
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Names = new javax.swing.JLabel();
        Msg = new javax.swing.JLabel();
        ImgeL = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusable(false);
        setFocusableWindowState(false);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        Names.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        Names.setForeground(new java.awt.Color(255, 255, 255));
        Names.setText("Buwaneka Nirmana");
        jPanel1.add(Names);
        Names.setBounds(80, 10, 210, 20);

        Msg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Msg.setForeground(new java.awt.Color(0, 204, 204));
        Msg.setText("Save Sucess...!");
        jPanel1.add(Msg);
        Msg.setBounds(80, 33, 210, 17);

        ImgeL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ImgeL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(ImgeL);
        ImgeL.setBounds(10, 8, 45, 45);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home_Frame/Notification123.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 1, 300, 60);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJDialog dialog = new NewJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImgeL;
    private javax.swing.JLabel Msg;
    private javax.swing.JLabel Names;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public void Load(String Name, String id, String m, String tab, String tabid) {

        try {
            Names.setText(Name);
            Msg.setText(m);
            ResultSet rs = DB.search("SELECT Pic FROM " + tab + " WHERE " + tabid + " = '" + id + "' ");
            while (rs.next()) {
                String pa = rs.getString("Pic");
                File f1 = new File(pa);
                Image img = ImageIO.read(f1);
                img = img.getScaledInstance(ImgeL.getWidth(), ImgeL.getHeight(), java.awt.Image.SCALE_SMOOTH);
                ImgeL.setIcon(new ImageIcon(img));
            }

            /////////////////////////////////////////////////////////////////////////////      
            new Thread(new Runnable() {
                @Override
                public void run() {

                    for (int i = 0; i < 10; i++) {

                        float f = Float.parseFloat("0." + i);

                        setOpacity(f);
                        try {
                            Thread.sleep(85);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(NewJDialog.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    try {
                        Thread.sleep(3000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(NewJDialog.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    for (int i = 9; i > 0; i--) {
                        float f = Float.parseFloat("0." + i);
                        setOpacity(f);
                        try {
                            Thread.sleep(85);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(NewJDialog.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                    dispose();

                }
            }).start();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
